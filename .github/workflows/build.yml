name: Build and Deploy NestJS App with pnpm

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            # 1. Checkout repository
            - name: Checkout repository
              uses: actions/checkout@v3

            # 2. Setup Node.js
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            # 3. Install pnpm
            - name: Install pnpm
              run: corepack enable && corepack prepare pnpm@latest --activate

            # 4. Install dependencies and build application
            - name: Install Dependencies and Build Application
              run: |
                  pnpm install
                  pnpm prisma generate
                  pnpm build

            # 5. Archive build
            - name: Archive build
              run: |
                  mkdir release
                  pnpm prune --prod
                  cp -R dist package.json pnpm-lock.yaml node_modules release/
                  cd release
                  tar --exclude='./**/*.log' -czvf ../release.tar.gz .
              shell: bash

            # 6. Upload artifact
            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: nestjs-app-release
                  path: release.tar.gz

    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download Artifact
              uses: actions/download-artifact@v3
              with:
                  name: nestjs-app-release

            - name: Install jq
              run: sudo apt-get update && sudo apt-get install -y jq

            - name: Upload Artifact via Pterodactyl API
              uses: rexlmanu/pterodactyl-upload-action@v2.1
              with:
                  panel-host: ${{ secrets.PANEL_HOST }}
                  api-key: ${{ secrets.API_KEY }}
                  server-id: ${{ secrets.SERVER_ID }}
                  source: 'release.tar.gz'
                  target: './'
                  restart: true
                  decompress-target: true
